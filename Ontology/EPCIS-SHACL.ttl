@prefix dash: <http://datashapes.org/dash#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix epcis: <https://ns.gs1.org/epcis/> .


epcis:EPCISDocumentShape
    a sh:NodeShape;
    sh:targetClass epcis:EPCISDocument;
    sh:property epcis:SchemaVersionShape;
    sh:property epcis:CreationDateShape;
    sh:node epcis:EpcisHeaderShape;
    sh:node epcis:EpcisBodyShape;
.
    
epcis:SchemaVersionShape
    a sh:PropertyShape ;
    sh:path owl:versionInfo ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "In every EPCISDocument, schemaVersion (owl:versionInfo) is mandatory, single valued and an xsd:string" ;
.

epcis:CreationDateShape
    a sh:PropertyShape ;
    sh:path dcterms:created ;
    sh:datatype xsd:dateTime ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "In every EPCISDocument, creationDate (dcterms:created) is mandatory, single valued and an xsd:dateTime" ;
.

epcis:EpcisHeaderShape
    a sh:NodeShape;
    sh:path epcis:epcisHeader;
    sh:maxCount 1;
.

epcis:EpcisBodyShape
    a sh:NodeShape;
    sh:path epcis:epcisBody;
    sh:minCount 1;
    sh:maxCount 1;
    sh:node epcis:EventListShape;
.

epcis:EventListShape
    a sh:NodeShape;
    sh:path epcis:eventList;
.


epcis:ObjectEventShape
    a sh:NodeShape ;
    sh:targetClass epcis:ObjectEvent ;
    sh:or (
      [ sh:nodeKind sh:IRI ; sh:pattern "^(urn:uuid:|ni:///)";]
      [ sh:nodeKind sh:BlankNode; ]
    );
    sh:property epcis:EventTimeShape ;
    sh:property epcis:EventTimeZoneOffsetShape ;
    sh:property epcis:RecordTimeShape ;
    sh:property epcis:ActionShape ;
    sh:property epcis:BizStepShape ;
    sh:property epcis:DispositionShape ;
    sh:property epcis:ReadPointShape ;
    sh:property epcis:BizLocationShape ;
    sh:property epcis:EPCListShape ;
    sh:property epcis:ParentIDForbiddenShape;
    sh:property epcis:ChildEPCsForbiddenShape ;   
    sh:property epcis:InputEPCListForbiddenShape ; 
    sh:property epcis:OutputEPCListForbiddenShape ; 
    sh:node epcis:QuantityElementShape ;
    sh:node epcis:InputQuantityElementForbiddenShape ;
    sh:node epcis:OutputQuantityElementForbiddenShape ;
    sh:node epcis:ChildQuantityElementForbiddenShape ;
    sh:node epcis:PersistentDispositionShape ;
    sh:node epcis:BizTransactionShape ;
    sh:node epcis:SourceListShape ;
    sh:node epcis:DestinationListShape ;
    sh:node epcis:ErrorDeclarationShape ;
    sh:node epcis:SensorElementShape ;
    sh:node epcis:CertificationInfoShape ;
.    

epcis:AggregationEventShape
    a sh:NodeShape ;
    sh:targetClass epcis:AggregationEvent ;
    sh:or (
      [ sh:nodeKind sh:IRI ; sh:pattern "^(urn:uuid:|ni:///)";]
      [ sh:nodeKind sh:BlankNode; ]
    );
    sh:property epcis:EventTimeShape ;
    sh:property epcis:EventTimeZoneOffsetShape ;
    sh:property epcis:RecordTimeShape ;
    sh:property epcis:ActionShape ;
    sh:property epcis:BizStepShape ;
    sh:property epcis:DispositionShape ;
    sh:property epcis:ReadPointShape ;
    sh:property epcis:BizLocationShape ;
    sh:property epcis:ParentIDShape ;
    sh:property epcis:ChildEPCsShape ;
    sh:property epcis:EPCListForbiddenShape ;
    sh:property epcis:InputEPCListForbiddenShape ; 
    sh:property epcis:OutputEPCListForbiddenShape ;
    sh:node epcis:ChildQuantityElementShape ;
    sh:node epcis:QuantityElementForbiddenShape ;
    sh:node epcis:InputQuantityElementForbiddenShape ;
    sh:node epcis:OutputQuantityElementForbiddenShape ;
    sh:node epcis:PersistentDispositionForbiddenShape ;
    sh:node epcis:BizTransactionShape ;
    sh:node epcis:SourceListShape ;
    sh:node epcis:DestinationListShape ;
    sh:node epcis:ErrorDeclarationShape ;
    sh:node epcis:SensorElementShape ;
    sh:node epcis:CertificationInfoShape ;
.    

epcis:AssociationEventShape
    a sh:NodeShape ;
    sh:targetClass epcis:AssociationEvent ;
    sh:or (
      [ sh:nodeKind sh:IRI ; sh:pattern "^(urn:uuid:|ni:///)";]
      [ sh:nodeKind sh:BlankNode; ]
    );
    sh:property epcis:EventTimeShape ;
    sh:property epcis:EventTimeZoneOffsetShape ;
    sh:property epcis:RecordTimeShape ;
    sh:property epcis:ActionShape ;
    sh:property epcis:BizStepShape ;
    sh:property epcis:DispositionShape ;
    sh:property epcis:ReadPointShape ;
    sh:property epcis:BizLocationShape ;
    sh:property epcis:ParentIDShape ;
    sh:property epcis:ChildEPCsShape ;
    sh:property epcis:EPCListForbiddenShape ;
    sh:property epcis:InputEPCListForbiddenShape ; 
    sh:property epcis:OutputEPCListForbiddenShape ; 
    sh:node epcis:ChildQuantityElementShape ;
    sh:node epcis:QuantityElementForbiddenShape ;
    sh:node epcis:InputQuantityElementForbiddenShape ;
    sh:node epcis:OutputQuantityElementForbiddenShape ;
    sh:node epcis:PersistentDispositionForbiddenShape ;
    sh:node epcis:BizTransactionShape ;
    sh:node epcis:SourceListShape ;
    sh:node epcis:DestinationListShape ;
    sh:node epcis:ErrorDeclarationShape ;
    sh:node epcis:SensorElementShape ;
    sh:node epcis:CertificationInfoShape ;
.    

epcis:TransactionEventShape
    a sh:NodeShape ;
    sh:targetClass epcis:TransactionEvent ;
    sh:or (
      [ sh:nodeKind sh:IRI ; sh:pattern "^(urn:uuid:|ni:///)";]
      [ sh:nodeKind sh:BlankNode; ]
    );
    sh:property epcis:EventTimeShape ;
    sh:property epcis:EventTimeZoneOffsetShape ;
    sh:property epcis:RecordTimeShape ;
    sh:property epcis:ActionShape ;
    sh:property epcis:BizStepShape ;
    sh:property epcis:DispositionShape ;
    sh:property epcis:ReadPointShape ;
    sh:property epcis:BizLocationShape ;
    sh:property epcis:ParentIDShape ;
    sh:property epcis:EPCListShape ;
    sh:property epcis:ChildEPCsForbiddenShape ;    
    sh:property epcis:InputEPCListForbiddenShape ; 
    sh:property epcis:OutputEPCListForbiddenShape ; 
    sh:node epcis:QuantityElementShape ;
    sh:node epcis:ChildQuantityElementForbiddenShape ;
    sh:node epcis:InputQuantityElementForbiddenShape ;
    sh:node epcis:OutputQuantityElementForbiddenShape ;
    sh:node epcis:PersistentDispositionForbiddenShape ;
    sh:node epcis:BizTransactionMandatoryShape ;
    sh:node epcis:SourceListShape ;
    sh:node epcis:DestinationListShape ;
    sh:node epcis:ErrorDeclarationShape ;
    sh:node epcis:SensorElementShape ;
    sh:node epcis:CertificationInfoShape ;
.    

epcis:TransformationEventShape
    a sh:NodeShape ;
    sh:targetClass epcis:TransformationEvent ;
    sh:or (
      [ sh:nodeKind sh:IRI ; sh:pattern "^(urn:uuid:|ni:///)";]
      [ sh:nodeKind sh:BlankNode; ]
    );
    sh:property epcis:EventTimeShape ;
    sh:property epcis:EventTimeZoneOffsetShape ;
    sh:property epcis:RecordTimeShape ;
    sh:property epcis:BizStepShape ;
    sh:property epcis:DispositionShape ;
    sh:property epcis:ReadPointShape ;
    sh:property epcis:BizLocationShape ;
    sh:property epcis:InputEPCListShape ;
    sh:property epcis:OutputEPCListShape ;
    sh:property epcis:ActionForbiddenShape ;
	sh:property epcis:ParentIDForbiddenShape;
    sh:property epcis:ChildEPCsForbiddenShape ;    
    sh:property epcis:EPCListForbiddenShape ;
    sh:node epcis:InputQuantityElementShape ;
    sh:node epcis:OutputQuantityElementShape ;
    sh:node epcis:QuantityElementForbiddenShape ;
    sh:node epcis:ChildQuantityElementForbiddenShape ;
    sh:node epcis:PersistentDispositionShape ;
    sh:node epcis:TransformationIDShape ;    
    sh:node epcis:BizTransactionShape ;
    sh:node epcis:SourceListShape ;
    sh:node epcis:DestinationListShape ;
    sh:node epcis:ErrorDeclarationShape ;
    sh:node epcis:SensorElementShape ;
    sh:node epcis:CertificationInfoShape ;
.    

    
epcis:EventTimeShape
    a sh:PropertyShape ;
    sh:path epcis:eventTime ;
    sh:datatype xsd:dateTimeStamp ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "In all EPCIS events, eventTime is mandatory, single valued and an xsd:dateTimeStamp" ;
.

epcis:EventTimeZoneOffsetShape
    a sh:PropertyShape ;
    sh:path epcis:eventTimeZoneOffset ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:pattern "^(\\+|-)((0[0-9]|1[0-3]):([0-5][0-9])|14:00)$" ;
    sh:message "In all EPCIS events, eventTimeZoneOffset is mandatory, single valued and an xsd:string" ;
.

epcis:RecordTimeShape
    a sh:PropertyShape ;
    sh:path epcis:recordTime ;
    sh:datatype xsd:dateTimeStamp ;
    sh:name "recordTime" ;
    sh:maxCount 1 ;
    sh:message "recordTime is optional; if present, a xsd:dateTimeStamp with only one value" ;
.

epcis:CertificationInfoShape
    a sh:PropertyShape ;
    sh:path epcis:certificationInfo ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values of certificationInfo must be IRIs/URIs" ;
.

epcis:ActionShape
    a sh:PropertyShape ;
    sh:path epcis:action ;
    sh:datatype xsd:string ;
    sh:in ("ADD" "OBSERVE" "DELETE") ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "Within ObjectEvent, AggregationEvent, TransactionEvent, AssociationEvent, action is mandatory, and must be a string value, one of either 'ADD', 'OBSERVE' or 'DELETE'" ;
.

epcis:ActionForbiddenShape
    a sh:PropertyShape ;
    sh:path epcis:action ;
    sh:maxCount 0 ;
    sh:message "action should not appear within TransformationEvent" ;
.

epcis:BizStepShape
    a sh:PropertyShape ;
    sh:path epcis:bizStep ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values of bizStep must be IRIs/URIs" ;
.

epcis:DispositionShape
    a sh:PropertyShape ;
    sh:path epcis:disposition ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values of disposition must be IRIs/URIs" ;
.

epcis:ReadPointShape
    a sh:PropertyShape ;
    sh:path epcis:readPoint ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values of readPoint must be IRIs/URIs" ;
.

epcis:BizLocationShape
    a sh:PropertyShape ;
    sh:path epcis:bizLocation ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values of bizLocation must be IRIs/URIs" ;
.

epcis:ChildEPCsShape
    a sh:PropertyShape ;
    sh:path epcis:childEPCs ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values within childEPCs must be IRIs/URIs" ;
.

epcis:ChildEPCsForbiddenShape
    a sh:PropertyShape ;
    sh:path epcis:childEPCs ;
    sh:maxCount 0 ;
    sh:message "childEPCs should not appear within ObjectEvent, TransactionEvent or TransformationEvent" ;
.

epcis:ParentIDShape
    a sh:PropertyShape ;
    sh:path epcis:parentID ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values of parentID must be IRIs/URIs" ;
.

epcis:ParentIDForbiddenShape
	a sh:PropertyShape;
	sh:path epcis:parentID;
	sh:maxCount 0;
	sh:message "parentID should not appear within ObjectEvent or TransformationEvent";
.

epcis:EPCListShape
    a sh:PropertyShape ;
    sh:path epcis:epcList ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values within epcList must be IRIs/URIs" ;
.

epcis:EPCListForbiddenShape
    a sh:PropertyShape ;
    sh:path epcis:epcList ;
    sh:maxCount 0 ;
    sh:message "epcList should not appear within AggregationEvent, AssociationEvent or TransformationEvent" ;
.

epcis:InputEPCListShape
    a sh:PropertyShape ;
    sh:path epcis:inputEPCList ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values within inputEPCList must be IRIs/URIs" ;
.

epcis:OutputEPCListShape
    a sh:PropertyShape ;
    sh:path epcis:outputEPCList ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Any values within outputEPCList must be IRIs/URIs" ;
.

epcis:InputEPCListForbiddenShape
    a sh:PropertyShape ;
    sh:path epcis:inputEPCList ;
    sh:maxCount 0 ;
    sh:message "inputEPCList should not appear within ObjectEvent, AggregationEvent, AssociationEvent or TransactionEvent - only within TransformationEvent" ;
.

epcis:OutputEPCListForbiddenShape
    a sh:PropertyShape ;
    sh:path epcis:outputEPCList ;
    sh:maxCount 0 ;
    sh:message "outputEPCList should not appear within ObjectEvent, AggregationEvent, AssociationEvent or TransactionEvent - only within TransformationEvent" ;
.

epcis:PersistentDispositionShape
    a sh:NodeShape ;
    sh:path epcis:persistentDisposition ;
    sh:property epcis:SetShape ;
    sh:property epcis:UnsetShape ;
.

epcis:PersistentDispositionForbiddenShape
	a sh:NodeShape ;
	sh:path epcis:persistentDisposition ;
	sh:maxCount 0;
	sh:message "persistentDisposition may not appear in an AggregationEvent, AssociationEvent or TransactionEvent";
.

epcis:SetShape
    a sh:PropertyShape ;
    sh:path epcis:set ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within persistentDisposition, values of set must be IRIs/URIs" ;
.

epcis:UnsetShape
    a sh:PropertyShape ;
    sh:path epcis:unset ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within persistentDisposition, values of unset must be IRIs/URIs" ;
.

epcis:TransformationIDShape
    a sh:PropertyShape ;
    sh:path epcis:transformationID ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within a TransformationEvent, values of transformationID must be IRIs/URIs" ;
.

epcis:BizTransactionShape
    a sh:NodeShape ;
    sh:path epcis:bizTransactionList ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:property epcis:BizTransactionTypeShape ;
    sh:message "Each value of bizTransactionList ('bizTransaction') must be an IRI/URI" ;
.

epcis:BizTransactionTypeShape 
    a sh:PropertyShape ;
    sh:path epcis:bizTransactionType ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within each value of bizTransactionList, bizTransactionType ('type') must be an IRI/URI" ;
.

epcis:BizTransactionMandatoryShape
    a sh:NodeShape ;
    sh:path epcis:bizTransactionList ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:minCount 1;
    sh:property epcis:BizTransactionTypeShape ;
    sh:message "Each value of bizTransactionList ('bizTransaction') must be an IRI/URI.  Within a TransactionEvent, bizTransactionList must contain at least one value." ;
.

epcis:SourceListShape
    a sh:NodeShape ;
    sh:path epcis:sourceList ;
    sh:property epcis:SourceShape ;
    sh:property epcis:SourceOrDestinationTypeShape ;
.

epcis:DestinationListShape
    a sh:NodeShape ;
    sh:path epcis:destinationList ;
    sh:property epcis:DestinationShape ;
    sh:property epcis:SourceOrDestinationTypeShape ;
.

epcis:SourceShape 
    a sh:PropertyShape ;
    sh:path epcis:sourceOrDestination ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within sourceList, sourceOrDestination ('source') must be an IRI/URI" ;
.

epcis:DestinationShape 
    a sh:PropertyShape ;
    sh:path epcis:sourceOrDestination ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within destinationList, sourceOrDestination ('destination') must be an IRI/URI" ;
.

epcis:SourceOrDestinationTypeShape 
    a sh:PropertyShape ;
    sh:path epcis:sourceOrDestinationType ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within sourceList or destinationList, sourceOrDestinationType ('type') must be an IRI/URI" ;
.

epcis:QuantityElementShape
    a sh:NodeShape ;
    sh:path epcis:quantityList ;
    sh:property epcis:EPCClassShape ;
    sh:property epcis:QuantityShape ;
    sh:property epcis:UOMShape ;
.

epcis:QuantityElementForbiddenShape
    a sh:NodeShape ;
    sh:path epcis:quantityList ;
    sh:maxCount 0;
    sh:message "quantityList should not appear within AggregationEvent, AssociationEvent or TransformationEvent";
.

epcis:ChildQuantityElementShape
    a sh:NodeShape ;
    sh:path epcis:childQuantityList ;
    sh:property epcis:EPCClassShape ;
    sh:property epcis:QuantityShape ;
    sh:property epcis:UOMShape ;
.

epcis:ChildQuantityElementForbiddenShape
    a sh:NodeShape ;
    sh:path epcis:childQuantityList ;
    sh:maxCount 0;
    sh:message "childQuantityList should not appear within ObjectEvent, TransactionEvent or TransformationEvent";
.

epcis:InputQuantityElementShape
    a sh:NodeShape ;
    sh:path epcis:inputQuantityList ;
    sh:property epcis:EPCClassShape ;
    sh:property epcis:QuantityShape ;
    sh:property epcis:UOMShape ;
.

epcis:OutputQuantityElementShape
    a sh:NodeShape ;
    sh:path epcis:outputQuantityList ;
    sh:property epcis:EPCClassShape ;
    sh:property epcis:QuantityShape ;
    sh:property epcis:UOMShape ;
.

epcis:InputQuantityElementForbiddenShape
    a sh:NodeShape ;
    sh:path epcis:inputQuantityList ;
	sh:maxCount 0;
    sh:message "inputQuantityList should not appear within ObjectEvent, AggregationEvent, AssociationEvent or TransactionEvent - only within TransformationEvent" ;
.

epcis:OutputQuantityElementForbiddenShape
    a sh:NodeShape ;
    sh:path epcis:outputQuantityList ;
	sh:maxCount 0;
    sh:message "outputQuantityList should not appear within ObjectEvent, AggregationEvent, AssociationEvent or TransactionEvent - only within TransformationEvent" ;	
.

epcis:EPCClassShape 
    a sh:PropertyShape ;
    sh:path epcis:epcClass ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within a QuantityElement, epcClass is mandatory and must be an IRI/URI and with only one value" ;
.

epcis:QuantityShape 
    a sh:PropertyShape ;
    sh:path epcis:quantity ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:message "Within a QuantityElement, quantity is mandatory and must be an xsd:double with only one value" ;
.

epcis:UOMShape 
    a sh:PropertyShape ;
    sh:path epcis:uom ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:pattern "^[A-Z0-9]{2,3}$";
    sh:message "uom must be an xsd:string and can only have one value" ;
.

epcis:ErrorDeclarationShape
    a sh:NodeShape ;
    sh:path epcis:errorDeclaration ;
    sh:property epcis:CorrectiveEventIDsShape ;
    sh:property epcis:ReasonShape ;
    sh:property epcis:DeclarationTimeShape ;
.

epcis:CorrectiveEventIDsShape 
    a sh:PropertyShape ;
    sh:path epcis:correctiveEventIDs ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within errorDeclaration, correctiveEventIDs must be IRIs/URIs" ;
.

epcis:ReasonShape 
    a sh:PropertyShape ;
    sh:path epcis:reason ;
    sh:maxCount 1;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:message "Within errorDeclaration, reason is optional but must be an IRI/URI" ;
.

epcis:DeclarationTimeShape
    a sh:PropertyShape ;
    sh:path epcis:declarationTime ;
    sh:datatype xsd:dateTimeStamp ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "Within errorDeclaration, declarationTime is mandatory and must be an xsd:dateTimeStamp" ;
.

epcis:SensorElementShape
    a sh:NodeShape ;
    sh:path epcis:sensorElementList ;
    sh:property epcis:SensorMetadataShape ;
    sh:property epcis:SensorReportShape ;
.

epcis:SensorReportShape
    a sh:NodeShape ;
    sh:path epcis:sensorReport ;
    sh:property epcis:TimeShape ;
    sh:property epcis:DeviceIDShape ;
    sh:property epcis:DeviceMetadataShape ;
    sh:property epcis:RawDataShape ;
    sh:property epcis:DataProcessingMethodShape ;
    sh:property epcis:MeasurementTypeShape ;
    sh:property epcis:ExceptionShape ;
    sh:property epcis:MicroorganismShape ;
    sh:property epcis:ChemicalSubstanceShape ;
    sh:property epcis:CoordinateReferenceSystemShape ;
    sh:property epcis:URIValueShape ;
    sh:property epcis:ValueShape ;
    sh:property epcis:MinValueShape ;
    sh:property epcis:MaxValueShape ;
    sh:property epcis:MeanValueShape ;
    sh:property epcis:SDevShape ;
    sh:property epcis:PercRankShape ;
    sh:property epcis:PercValueShape ;
    sh:property epcis:BooleanValueShape ;
    sh:property epcis:HexBinaryValueShape ;
    sh:property epcis:StringValueShape ;
    sh:property epcis:UOMShape ;
    sh:property epcis:ComponentShape ;
    sh:minCount 1 ;
.

epcis:SensorMetadataShape
    a sh:NodeShape ;
    sh:path epcis:sensorMetadata ;
    sh:property epcis:TimeShape ;
    sh:property epcis:StartTimeShape ;
    sh:property epcis:EndTimeShape ;
    sh:property epcis:DeviceIDShape ;
    sh:property epcis:DeviceMetadataShape ;
    sh:property epcis:RawDataShape ;
    sh:property epcis:DataProcessingMethodShape ;
    sh:property epcis:BizRulesShape ;
    sh:maxCount 1 ;
.

epcis:TimeShape
    a sh:PropertyShape ;
    sh:path epcis:time ;
    sh:datatype xsd:dateTimeStamp ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport or sensorMetadata, tine is optional but must be an xsd:dateTimeStamp and can only have one value" ;
.

epcis:StartTimeShape
    a sh:PropertyShape ;
    sh:path epcis:startTime ;
    sh:datatype xsd:dateTimeStamp ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorMetadata, startTime is optional but must be an xsd:dateTimeStamp and can only have one value" ;
.

epcis:EndTimeShape
    a sh:PropertyShape ;
    sh:path epcis:endTime ;
    sh:datatype xsd:dateTimeStamp ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorMetadata, endTime is optional but must be an xsd:dateTimeStamp and can only have one value" ;
.

epcis:DeviceIDShape
    a sh:PropertyShape ;
    sh:path epcis:deviceID ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport or sensorMetadata, deviceID is optional but must be an IRI/URI and can only have one value" ;
.

epcis:DeviceMetadataShape
    a sh:PropertyShape ;
    sh:path epcis:deviceMetadata ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport or sensorMetadata, deviceMetadata is optional but must be an IRI/URI and can only have one value" ;
.

epcis:RawDataShape
    a sh:PropertyShape ;
    sh:path epcis:rawData ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport or sensorMetadata, rawData is optional but must be an IRI/URI and can only have one value" ;
.

epcis:DataProcessingMethodShape
    a sh:PropertyShape ;
    sh:path epcis:dataProcessingMethod ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport or sensorMetadata, dataProcessingMethod is optional but must be an IRI/URI and can only have one value" ;
.

epcis:BizRulesShape
    a sh:PropertyShape ;
    sh:path epcis:bizRules ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport or sensorMetadata, bizRules is optional but must be an IRI/URI and can only have one value" ;
.

epcis:MeasurementTypeShape
    a sh:PropertyShape ;
    sh:path epcis:measurementType ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, measurementType is optional but must be an IRI/URI and can only have one value" ;
.

epcis:ExceptionShape
    a sh:PropertyShape ;
    sh:path epcis:exception ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, exception is optional but must be an IRI/URI and can only have one value" ;
.

epcis:MicroorganismShape
    a sh:PropertyShape ;
    sh:path epcis:microorganism ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, microorganism is optional but must be an IRI/URI and can only have one value" ;
.

epcis:ChemicalSubstanceShape
    a sh:PropertyShape ;
    sh:path epcis:chemicalSubstance ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, chemicalSubstance is optional but must be an IRI/URI and can only have one value" ;
.

epcis:CoordinateReferenceSystemShape
    a sh:PropertyShape ;
    sh:path epcis:coordinateReferenceSystem ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, coordinateReferenceSystem is optional but must be an IRI/URI and can only have one value" ;
.

epcis:ComponentShape
    a sh:PropertyShape ;
    sh:path epcis:component ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, component is optional but must be an IRI/URI and can only have one value" ;
.

epcis:URIValueShape
    a sh:PropertyShape ;
    sh:path epcis:uriValue ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^(.+?):(.+)$" ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, uriValue is optional but must be an IRI/URI and can only have one value" ;
.

epcis:ValueShape
    a sh:PropertyShape ;
    sh:path epcis:value ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, value is optional but must be an xsd:double and can only have one value" ;
.

epcis:MinValueShape
    a sh:PropertyShape ;
    sh:path epcis:minValue ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, minValue is optional but must be an xsd:double and can only have one value" ;
.

epcis:MaxValueShape
    a sh:PropertyShape ;
    sh:path epcis:maxValue ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, maxValue is optional but must be an xsd:double and can only have one value" ;
.

epcis:MeanValueShape
    a sh:PropertyShape ;
    sh:path epcis:meanValue ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, meanValue is optional but must be an xsd:double and can only have one value" ;
.

epcis:SDevShape
    a sh:PropertyShape ;
    sh:path epcis:sDev ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, sDev is optional but must be an xsd:double and can only have one valuee" ;
.

epcis:PercRankShape
    a sh:PropertyShape ;
    sh:path epcis:percRank ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, percRank is optional but must be an xsd:double and can only have one value" ;
.

epcis:PercValueShape
    a sh:PropertyShape ;
    sh:path epcis:percValue ;
    sh:datatype xsd:double ;
    sh:not [ sh:hasValue "NaN"^^xsd:double ; ];
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, percValue is optional but must be an xsd:double and can only have one value" ;
.

epcis:BooleanValueShape
    a sh:PropertyShape ;
    sh:path epcis:booleanValue ;
    sh:datatype xsd:boolean ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, booleanValue is optional but must be an xsd:boolean and can only have one value" ;
.

epcis:HexBinaryValueShape
    a sh:PropertyShape ;
    sh:path epcis:hexBinaryValue ;
    sh:datatype xsd:hexBinary ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, hexBinaryValue is optional but must be an xsd:hexBinary and can only have one value" ;
.

epcis:StringValueShape
    a sh:PropertyShape ;
    sh:path epcis:stringValue ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:message "Within each value of sensorReport, stringValue is optional but must be an xsd:string and can only have one value" ;
.

